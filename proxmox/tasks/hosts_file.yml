---
- name: Enumerate all cluster hosts within the hosts file
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ hostvars[item].pve_cluster_addr0 }} {{ hostvars[item].ansible_fqdn }} {{ hostvars[item].ansible_hostname }}"
  loop: "{{ groups[pve_group] }}"
  when: "pve_cluster_enabled | bool and pve_manage_hosts_enabled | bool"

- name: Remove conflicting lines in hosts files
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    # expanded, this turns out to be, for example:
    # regexp: "^(?!10\.0\.3\.17\\ test01\.lxc\\ test01)(?!10\.0\.3\.17)[0-9a-f:.]+(\s+.*)?\s(test01\.lxc|test01)(\s+.*|\s*)$'
    # basically first we ignore lines that match from the host enumeration task
    # above, then we match against different IPs (e.g. NOT 10.0.3.17) that have
    # the hostname/fqdn we inserted a record for previously, taking care also to
    # detect word boundaries (\b wasn't working for some reason)
    regexp: "\
      ^(?!\
        {{ _correct_line | regex_escape() }}\
      )\
      {# Ignore lines starting with the current cluster host #}\
      (?!{{ _correct_ip | regex_escape() }})\
      {# Match an IPv4/v6 address at the start #}\
      [0-9a-f:.]\
      {# Match any hostnames, surrounded by whitespace #}\
      +(\\s+.*)?\\s\
      (\
        {{ _match_hosts | map('regex_escape') | join('|') }}\
      )\
      (\\s+.*|\\s*)$"
    state: absent
    backup: true
  loop: "{{ groups[pve_group] }}"
  vars:
    _correct_line: "\
      {{ hostvars[item].pve_cluster_addr0 }}
      {{ hostvars[item].ansible_fqdn }}
      {{ hostvars[item].ansible_hostname }}"
    _correct_ip: "{{ hostvars[item].pve_cluster_addr0 }}"
    _match_hosts: >-
      [
        "{{ hostvars[item].ansible_fqdn }}",
        "{{ hostvars[item].ansible_hostname }}"
      ]
  when: "pve_cluster_enabled | bool"

- name: Define hostname in /etc/hosts for single-host installations
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    regexp: "\
      {# Match an IPv4/v6 address at the start #}\
      ^\\s*[0-9a-f:.]+\
      {# Match at least one whitespace, and any non-hostname names #}\
      (\\s+.*)*\\s\
      {# Match either our fqdn or hostname #}\
      ({{ ansible_fqdn | regex_escape() }}|{{ ansible_hostname | regex_escape() }})\
      {# Require there be a word boundary at the end of the name(s). #}\
      {# This can be any whitespace, or end-of-line. #}\
      (\\s+.*|\\s*)$"
    line: "{{ hostvars[inventory_hostname].pve_cluster_addr0 }} {{ ansible_fqdn }} {{ ansible_hostname }}"
    backup: true
  when: "not pve_cluster_enabled | bool"

...
